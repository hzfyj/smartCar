/***********************************************************************************************
                        杭州电子科技大学 智能车（光电）K66例程
												                     初次发布时间：2017年11月19日
																	 授权给 杭电智能车专用
须知：1、本例程适用K66FX1M0VLQ18芯片，其他K66系列芯片暂未测试。
	  2、本例程通过逐飞科技K66MDK库更改而成，并借鉴了超核K60库的相关文件。
					
1.1.1版本更新介绍：如果你正在使用1.1版本的固件库，可以直接替换掉flash.c flash.g port_cfg.h三个文件实现
				  更新
2.1.0版本更新介绍：如果你正在使用2.0.2版本的固件库，可以直接添加SEEKFREE_MT9V032.c SEEKFREE_MT9V032.h
				  dma_old.c dma_old.h，并替换掉sd_stoeage.c sd_stoeage.h，并在isr.c中添加
				  void PORTE_IRQHandler(void) void DMA0_IRQHandler(void) 
				  void UART3_RX_TX_IRQHandler(void)三个函数，并请勿改动以上文件中的任何代码(因为固件库
				  存在着一些问题)
2.1.1版本更新介绍：如果你正在使用2.1.0版本固件库，请添加或替换本文件夹包含的所有文件，并在录图模式sd卡初
				  始化之后摄像头初始化之前加入SD_ManyWT_Init();开启多块写命令，并在读图模式中while(1)
				  循环中加入延时50ms的语句，注意波特率为640000，上位机显示图像有效范围是0-185

K66下位机使用方法：
	当需要传输数据到sd卡上时，添加 MySD_Init();，并在每场图像传输完成之后添加 SD_Write();以将数据以及
图像存储在sd卡上，在data_give()函数中更改需要上传的数据;
	当需要将sd卡上的数据发送到上位机上时，添加MySD_Init();和Data_Uart_Init();，以初始化sd卡以及uart，
并在while(1)循环中添加SD_ReadData();函数来将数据上传到上位机中，注意上位机的波特率需要调整到640000
	当需要实时传输时，需要添加Data_Uart_Init();初始化uart，并在获取图像之后添加Live_Transmission();，
注意上位机的波特率需要调整到640000
	**如果需要更多了解如何使用，可以参考main.c中image_test_read() image_test_hdu_save() 
	**image_test_hdu_live()三个函数
	  
更新说明：
版本号				更新时间				修改人				更新内容
 1.0			   2017.11.19			高源辰			创建1.0版本例程，适用光电摄像头
 1.1			   2018.2.26			高源辰			测试ADC模块，并修改时钟分频
														替换了逐飞oled函数库，使用旧库oled函数，
														优化了时序
														移植旧库flash读取函数，但尚未测试
1.1.1			   2018.2.26			高源辰			跟随逐飞科技更新了flash相关固件库
2.0.0			   2018.2.26			高源辰			重新创建MDK工程，删除无关函数，节省编译时间
2.0.1			   2018.2.27			高源辰			修复gpio模块输入功能，详见gpio.c文件注释
2.0.2			   2018.2.27			高源辰			添加dmacnt，且增加更多的dma传输模式
2.1.0			   2018.3.14			高源辰			添加总钻风摄像头，并修复了之前开发sd卡以及
														上位机上传过程中的若干bug，实现了对于图像、
														三线、数据等的保存与上传，为了适应新方案，
														请使用最新的sd卡并保持sd卡的良好运行
2.1.1			   2018.3.15			高源辰			由于小车运行过程中的抖动会造成sd卡的读写不
														稳定，使用姚鑫学长之前使用的sd卡读写方式，
														并相应修改了部分摄像头驱动代码
***********************************************************************************************/  